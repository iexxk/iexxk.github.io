#!/usr/bin/env node
/*
同步版本
批量更新修改时间
用于bolg自动更新修改时间
批量替换本地链接为网络链接，使用七牛图床
*/

console.log('开始检测更新时间和图片');
var fs = require("fs"); //请求文件系统
var file = "./txt"; //设置读取和写入的文件，当前目录下的test文件
var RegExp=/(updated:\s*)((\d{2}(([02468][048])|([13579][26]))[\-\/\s]?((((0?[13578])|(1[02]))[\-\/\s]?((0?[1-9])|([1-2][0-9])|(3[01])))|(((0?[469])|(11))[\-\/\s]?((0?[1-9])|([1-2][0-9])|(30)))|(0?2[\-\/\s]?((0?[1-9])|([1-2][0-9])))))|(\d{2}(([02468][1235679])|([13579][01345789]))[\-\/\s]?((((0?[13578])|(1[02]))[\-\/\s]?((0?[1-9])|([1-2][0-9])|(3[01])))|(((0?[469])|(11))[\-\/\s]?((0?[1-9])|([1-2][0-9])|(30)))|(0?2[\-\/\s]?((0?[1-9])|(1[0-9])|(2[0-8]))))))(\s((([0-1][0-9])|(2?[0-3]))\:([0-5]?[0-9])((\s)|(\:([0-5]?[0-9])))))/g;
var imgReg=/\!\[[\s\S]*?\]\([\s\S]*?\)/g;

var files= fs.readdirSync("./");

var len=files.length;
var file=null;
for(var i=0;i<len;i++){
	file=files[i];
	//console.log("读取文件：",file);
	if(file.indexOf(".md")>-1){
		//console.log("处理文件：",file);
		writeFileTime(file,fs);
	}
}


/*
file:读取时间的文件以及写入内容的文件
fs: 文件系统
*/
function writeFileTime(file,fs){
	var data = fs.readFileSync(file, 'utf8');
	if(RegExp.test(data)){ //如果有匹配的字符串则进去
		var stats= fs.statSync(file);
		var updateds=data.match(RegExp);
	    var updated=updateds[0].replace("updated: ","").replace(/-/g,"/");  //时间格式化为2018/01/29 21:33:30
		if(new Date(stats.mtime).getTime()-new Date(Date.parse(updated))>1000*60*5){
			console.log(file,"时间处理："+updateds[0]);
			var result= data.replace(updateds[0],"updated: "+getFormatDate(stats.mtime)); //替换更新时间
			fs.writeFileSync(file, result, 'utf8');
			fs.utimesSync(file,new Date(stats.atime),new Date(stats.mtime));
			console.log(file,"成功更新时间:"+updateds[0].replace(updateds[0],"updated: "+getFormatDate(stats.mtime)));
		}			
	}
	/*if(imgReg.test(data)){ //匹配markdown图片
		console.log(file,"开始处理图片");
		var imgpaths=data.match(imgReg);
		for (var i = imgpaths.length - 1; i >= 0; i--) {
			var imgpath=imgpaths[i];
			// console.log(imgpath);
			if (imgpath.indexOf("xuanfong1.github.io\\source\\image")!=-1) {
				console.log(file,"处理:"+imgpath);
				var filenametemp= imgpath.split('\\').pop();
				var filename=filenametemp.slice(0,filenametemp.length-1);
				var result=data.replace(imgpath,"![](https://raw.githubusercontent.com/xuanfong1/xuanfong1.github.io/master/image/src_dir/"+filename+")");
				fs.writeFileSync(file, result, 'utf8');
				console.log("成功替换："+imgpath.replace(imgpath,"![](https://raw.githubusercontent.com/xuanfong1/xuanfong1.github.io/master/image/src_dir/"+filename+")"));
			}
			if (imgpath.indexOf("xuanfong1.github.io/source/image")!=-1) {
				console.log(file,"处理:"+imgpath);
				var filenametemp= imgpath.split('/').pop();
				var filename=filenametemp.slice(0,filenametemp.length-1);
				var result=data.replace(imgpath,"![](https://raw.githubusercontent.com/xuanfong1/xuanfong1.github.io/master/image/src_dir/"+filename+")");
				fs.writeFileSync(file, result, 'utf8');
				console.log("成功替换："+imgpath.replace(imgpath,"![](https://raw.githubusercontent.com/xuanfong1/xuanfong1.github.io/master/image/src_dir/"+filename+")"));
			}
		}
	}	
	*/
}

/*
 timeStr:时间，格式可为："September 16,2016 14:15:05、
 "September 16,2016"、"2016/09/16 14:15:05"、"2016/09/16"、
 '2014-04-23T18:55:49'和毫秒
 dateSeparator：年、月、日之间的分隔符，默认为"-"，
 timeSeparator：时、分、秒之间的分隔符，默认为":"
 */
function getFormatDate(timeStr, dateSeparator, timeSeparator) {
    dateSeparator = dateSeparator ? dateSeparator : "-";
    timeSeparator = timeSeparator ? timeSeparator : ":";
    var date = new Date(timeStr),
            year = date.getFullYear(),// 获取完整的年份(4位,1970)
            month = date.getMonth(),// 获取月份(0-11,0代表1月,用的时候记得加上1)
            day = date.getDate(),// 获取日(1-31)
            hour = date.getHours(),// 获取小时数(0-23)
            minute = date.getMinutes(),// 获取分钟数(0-59)
            seconds = date.getSeconds(),// 获取秒数(0-59)
            Y = year + dateSeparator,
            M = ((month + 1) > 9 ? (month + 1) : ('0' + (month + 1))) + dateSeparator,
            D = (day > 9 ? day : ('0' + day)) + ' ',
            h = (hour > 9 ? hour : ('0' + hour)) + timeSeparator,
            m = (minute > 9 ? minute : ('0' + minute)) + timeSeparator,
            s = (seconds > 9 ? seconds : ('0' + seconds)),
            formatDate = Y + M + D + h + m + s;
    return formatDate;
}
